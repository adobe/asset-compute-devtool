# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  client-test:
    runs-on: ubuntu-latest
    if: ${{  !contains(github.event.head_commit.message, '[ci skip]') }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Use Node.js 23
        uses: actions/setup-node@v4
        with:
          node-version: '23'
      - name: Configure yarn and npm
        run: |
          corepack enable
          yarn config set registry https://registry.npmjs.org/
          npm config set registry https://registry.npmjs.org/
          yarn config set httpTimeout 600000
      - name: Clean and install dependencies
        run: |
          rm -f yarn.lock
          yarn install
        working-directory: ./client
      - name: Run tests
        run: npm test -- --coverage --watchAll=false
        working-directory: ./client
        env:
          NODE_OPTIONS: '--openssl-legacy-provider'
  server-test:
    runs-on: ubuntu-latest
    if: ${{  !contains(github.event.head_commit.message, '[ci skip]') }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Use Node.js 23
        uses: actions/setup-node@v4
        with:
          node-version: '23'
      - name: Configure yarn and npm
        run: |
          corepack enable
          yarn config set registry https://registry.npmjs.org/
          npm config set registry https://registry.npmjs.org/
          yarn config set httpTimeout 600000
      - name: Clean client yarn.lock for build
        run: rm -f yarn.lock
        working-directory: ./client
      - name: Clean and install server dependencies
        run: |
          rm -f yarn.lock
          yarn install
        working-directory: ./server
      - name: Run tests and build
        run: |
          npm run build
          npm test
        working-directory: ./server
        env:
          NODE_OPTIONS: '--openssl-legacy-provider'
  semantic-release:
    runs-on: ubuntu-latest
    needs: [client-test, server-test]
    if: ${{  !contains(github.event.head_commit.message, '[ci skip]') && github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Use Node.js 23
        uses: actions/setup-node@v4
        with:
          node-version: '23'
      - name: Configure yarn and npm
        run: |
          corepack enable
          yarn config set registry https://registry.npmjs.org/
          npm config set registry https://registry.npmjs.org/
          yarn config set httpTimeout 600000
      - name: Install aio
        run: npm install -g @adobe/aio-cli@8.2.0
      - name: Clean and install client dependencies
        run: |
          rm -f yarn.lock
          yarn install
        working-directory: ./client
      - name: Clean and install server dependencies
        run: |
          rm -f yarn.lock
          yarn install
        working-directory: ./server
      - name: Run build and semantic release
        run: |
          npm run build
          npm run semantic-release
        working-directory: ./server
        env:
          GITHUB_TOKEN: ${{ secrets.ADOBE_BOT_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.ADOBE_BOT_NPM_TOKEN }}
          NODE_OPTIONS: '--openssl-legacy-provider'
